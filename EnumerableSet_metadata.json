{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [],
		"devdoc": {
			"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"OUD.sol": "EnumerableSet"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"OUD.sol": {
			"keccak256": "0x31b17ff6f7891cd605f1ba8741319580f16904c87c5e4e425175ba446f969ae8",
			"license": "MIT",
			"urls": [
				"bzz-raw://1ba5dd1273a852ddac9bd9a43e056d81fd0c7cebdf4e77fa5101904cff765001",
				"dweb:/ipfs/QmQsYbVojF261Emwmnrr116uVP9YVsk5d3UhAcVeemwrW3"
			]
		}
	},
	"version": 1
}